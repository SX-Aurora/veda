GET_TARGET_PROPERTY(VEDA_SOURCE_DIR veda SOURCE_DIR)
INCLUDE_DIRECTORIES(${VEDA_SOURCE_DIR})
INCLUDE_DIRECTORIES(${AVEO_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${Tungl_INCLUDE_DIRS})
CONFIGURE_FILE(${Tungl_SRC} ${CMAKE_CURRENT_BINARY_DIR}/tungl.vcpp COPYONLY)

FUNCTION(ADD_DEVICE_LIBRARY ARCH SUFFIX)
	ADD_LIBRARY		(veda_device_${ARCH} SHARED 
		${CMAKE_CURRENT_LIST_DIR}/veda/device.vcpp
		${CMAKE_CURRENT_LIST_DIR}/veda/kernels.vcpp
		${CMAKE_CURRENT_LIST_DIR}/veda/memset.vcpp
		${CMAKE_CURRENT_BINARY_DIR}/tungl.vcpp
	)
	TARGET_COMPILE_OPTIONS	(veda_device_${ARCH} PRIVATE -fopenmp -march=${ARCH})
	SET_TARGET_PROPERTIES 	(veda_device_${ARCH} PROPERTIES LINK_FLAGS "-march=${ARCH} -fopenmp -Wl,--version-script=${CMAKE_CURRENT_LIST_DIR}/veda.map")
	SET_TARGET_PROPERTIES	(veda_device_${ARCH} PROPERTIES OUTPUT_NAME "veda")
	SET_TARGET_PROPERTIES	(veda_device_${ARCH} PROPERTIES SUFFIX ${SUFFIX})

	INSTALL(FILES
		${CMAKE_CURRENT_LIST_DIR}/veda_device.h
		${CMAKE_CURRENT_LIST_DIR}/veda_device_omp.h
		DESTINATION ${VEDA_INSTALL_PATH}/include)
	INSTALL(FILES
		${CMAKE_CURRENT_LIST_DIR}/veda/device.h
		${CMAKE_CURRENT_LIST_DIR}/veda/omp.h
		DESTINATION ${VEDA_INSTALL_PATH}/include/veda)

	IF(VEDA_DIST_TYPE STREQUAL VEOS)
		INSTALL(TARGETS veda_device_${ARCH} LIBRARY DESTINATION ${VEDA_INSTALL_PATH}/lib64)
	ELSE()	
		INSTALL(TARGETS veda_device_${ARCH} LIBRARY DESTINATION ${VEDA_INSTALL_PATH}/libve)
	ENDIF()
ENDFUNCTION()

ADD_DEVICE_LIBRARY(ve1 ".vso")
ADD_DEVICE_LIBRARY(ve3 ".vso3")
