/**
 * @mainpage Introduction
 *
 * VEDA is a parallel computing platform and programming model that makes
 * using a VE for general purpose computing simple and elegant. The VEDA
 * platform is designed to work with programming languages such as C, C++,
 * and Fortran. This accessibility makes it easier for specialists in 
 * parallel programming to use GPU resources,
 *
 * Using VEDA, a programmer can execute code on VE and can control the
 * execution from VH main program.
 *
 * VEDA (VE Driver API) and VERA (VE Runtime API) are a CUDA Driver and 
 * Runtime API-like APIs for hybrid programming. It is based 
 * on AVEO. Most of the functionality is identical to the CUDA Driver API
 * and CUDA Runtime API.
 *
 * This document describes public APIs for VEDA.
 * The page "Modules" shows a list of VEDA API functions.
 * The page "Examples" shows a list of all example.
 * The page "VEDA vs CUDA" shows the differences and similarities between 
 * VEDA and CUDA, also shows some unique features of VEDA.
 *
 * @author NEC Laboratories Europe
 *
 * @author NEC Corporation
 * @copyright 2020-2022. Licensed under the terms of BSD 3-Clause.
 *
 * @par Revision History
 *      Revision,
 *      Date,
 *      Updates/Remarks
 *
 * @par
 *      Rev.5,
 *      Jan 2023,
 * @n   This revision covers veoffload-veda-2.14.0 or later.
 * @n   Added support of below new VEDA APIs
 * @n   vedaHMemsetD2D128Async(),vedaHMemsetD2D128(),vedaHMemsetD2D16Async(),
 *      vedaHMemsetD2D16(),vedaHMemsetD2D32Async(),vedaHMemsetD2D32(),       
 *      vedaHMemsetD2D64Async(),vedaHMemsetD2D64(),vedaHMemsetD2D8Async(),
 *      vedaHMemsetD2D8()        
 * @n   Enabled support for vedaMemsetD2D* set of APIs after Bugfix.
 * @par
 *      Rev.4,
 *      Nov 2022,
 * @n   This revision covers veoffload-veda-2.13.0 or later.
 * @n   Added support of below new VEDA APIs
 * @n   vedaLaunchHostFuncEx(),vedaMemSwap(),vedaMemSwapAsync(),
 *      vedaLaunchKernelEx_compat(),vedaMemsetD128(),vedaMemsetD128Async(),
 *      vedaMemAllocOverrideOnce()
 * @n   Added support of below new VEDA HMEM APIs
 *      vedaHMemAlloc(), vedaHMemcpyDtoXAsync(), vedaHMemcpyDtoX(),
 *      vedaHMemcpy(), vedaHMemcpyXtoDAsync(), vedaHMemcpyXtoD(),
 *      vedaHMemPtr(), vedaHMemsetD128Async(), vedaHMemsetD128(),
 *      vedaHMemsetD16(), vedaHMemsetD32Async(), vedaHMemsetD32(), 
 *      vedaHMemsetD64Async(), vedaHMemsetD64(), vedaHMemsetD8(), 
 *      vedaHMemsetD16Async(),
 *      vedaHMemFree(), vedaHMemsetD8Async()
 * @n   Replaced "bool checkResult" with "int64_t* result" in
 *      vedaLaunchKernelEx() to receive return value of kernel.
 * @n   Replaced "const void *value" to "const VEDAhmemptr value" in
 *      vedaArgsSetHMEM().
 * @n   Modified VEDAdeviceptr to prevent segmentation fault.
 * @n   Below APIs are removed
 * @n   vedaMemGetRawPointer(), vedaMemGetHMEMPointer(), vedaMemHMEM(), 
        vedaMemHMEMSize()
 * @n   Disabled support for vedaMemsetD2D* set of APIs.
 * @n   Added support of below new VERA APIs
 * @n   veraLaunchHostFuncEx()
 * @n   Program linking libveda.so needs to be re-compiled when veoffload-veda
 *      is updated to v2.13 or later
 * @par
 *      Rev.3,
 *      July 2022,
 * @n   This revision covers veoffload-veda-2.11.1 or later.
 * @n   Fixed build error, loading library error and missing invocation
 *      of vedaArgsDestroy() in example programs
 * @par
 *      Rev.2,
 *      Mar. 2022,
 * @n   This revision covers veoffload-veda-2.11.1 or later.
 * @n   Updated VEDA API similar to CUDA.
 * @n   Difference points between VEDA and CUDA
 * @n   Unique features of VEDA.
 * @n   Updated environment variable usage/description.
 * @n   Suppressed extra error messages.
 * @par
 *      Rev.1,
 *      Dec. 2021,
 * @n   This revision covers veoffload-veda-2.10.0 or later.
 * @n   First release.
 */
