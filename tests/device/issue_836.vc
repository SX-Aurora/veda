#include <stdio.h>
#include <veda_device.h>

void fun_alloc_init(size_t n, VEDAdeviceptr vptr)
{
	size_t i;
	double *a;

	vedaMemAllocPtr((void **) &a, vptr, sizeof(double) * n); // double allocation, but should return the already allocated ptr

	printf("VE: %s: a=%p, n=%llu\n", __FUNCTION__, a, n);
	for (i = 0; i < n; i++) a[i] = i;
}

void fun_kernel1(double s, size_t n, double *a)
{
	size_t i;

	printf("VE: %s: a=%p\n", __FUNCTION__, a);
	//for (i = 0; i < n; i++) a[i] = s * a[i];
}
